//! https://simple.wikipedia.org/wiki/Order_of_magnitude.
use ethnum::U256;

pub const QUINTILLIONTH: U256 = U256::new(1u128);
pub const HUN_QUADTH: U256 = U256::new(10u128);
pub const TEN_QUADTH: U256 = U256::new(100u128);
pub const QUADTH: U256 = U256::new(1000);
pub const HUN_TRILTH: U256 = U256::new(10000);
pub const TEN_TRILTH: U256 = U256::new(100000);
pub const TRILTH: U256 = U256::new(1000000);
pub const HUN_BILTH: U256 = U256::new(10000000);
pub const TEN_BILTH: U256 = U256::new(100000000);
pub const BILTH: U256 = U256::new(1000000000);
pub const HUN_MILTH: U256 = U256::new(10000000000);
pub const TEN_MILTH: U256 = U256::new(100000000000);
pub const MILTH: U256 = U256::new(1000000000000);
pub const HUN_THOUSANDTH: U256 = U256::new(10000000000000);
pub const TEN_THOUSANDTH: U256 = U256::new(100000000000000);
pub const THOUSANDTH: U256 = U256::new(1000000000000000);
pub const HUNDREDTH: U256 = U256::new(10000000000000000);
pub const TENTH: U256 = U256::new(100_000_000_000_000_000);
pub const ONE: U256 = U256::new(1_000_000_000_000_000_000);
pub const TEN: U256 = U256::new(10000000000000000000);
pub const HUNDRED: U256 = U256::new(100000000000000000000);
pub const THOUSAND: U256 = U256::new(1000000000000000000000);
pub const TEN_THOUSAND: U256 = U256::new(10000000000000000000000);
pub const HUN_THOUSAND: U256 = U256::new(100000000000000000000000);
pub const MIL: U256 = U256::new(1000000000000000000000000);
pub const TEN_MIL: U256 = U256::new(10000000000000000000000000);
pub const HUN_MIL: U256 = U256::new(100000000000000000000000000);
pub const BIL: U256 = U256::new(1000000000000000000000000000);
pub const TEN_BIL: U256 = U256::new(10000000000000000000000000000);
pub const HUN_BIL: U256 = U256::new(100000000000000000000000000000);
pub const TRIL: U256 = U256::new(1000000000000000000000000000000);
pub const TEN_TRIL: U256 = U256::new(10000000000000000000000000000000);
pub const HUN_TRIL: U256 = U256::new(100000000000000000000000000000000);
pub const QUAD: U256 = U256::new(1000000000000000000000000000000000);
pub const TEN_QUAD: U256 = U256::new(10000000000000000000000000000000000);
pub const HUN_QUAD: U256 = U256::new(100000000000000000000000000000000000);
pub const QUIN: U256 = U256::new(1000000000000000000000000000000000000);
pub const TEN_QUIN: U256 = U256::new(10000000000000000000000000000000000000);
pub const HUN_QUIN: U256 = U256::new(100000000000000000000000000000000000000);
// TO DO
pub const SEPT: U256 = U256::new(1000000000000000000000000000000000000000);
pub const TEN_SEPT: U256 = U256::new(10000000000000000000000000000000000000000);
pub const HUN_SEPT: U256 = U256::new(100000000000000000000000000000000000000000);
pub const OCT: U256 = U256::new(1000000000000000000000000000000000000000000);
pub const TEN_OCT: U256 = U256::new(10000000000000000000000000000000000000000000);
pub const HUN_OCT: U256 = U256::new(100000000000000000000000000000000000000000000);
pub const NON: U256 = U256::new(1000000000000000000000000000000000000000000000);
pub const TEN_NON: U256 = U256::new(10000000000000000000000000000000000000000000000);
pub const HUN_NON: U256 = U256::new(100000000000000000000000000000000000000000000000);
pub const DECI: U256 = U256::new(1000000000000000000000000000000000000000000000000);
pub const TEN_DECI: U256 = U256::new(10000000000000000000000000000000000000000000000000);
pub const HUN_DECI: U256 = U256::new(100000000000000000000000000000000000000000000000000);
pub const UND: U256 = U256::new(1000000000000000000000000000000000000000000000000000);
pub const TEN_UND: U256 = U256::new(10000000000000000000000000000000000000000000000000000);
pub const HUN_UND: U256 = U256::new(100000000000000000000000000000000000000000000000000000);
pub const DUOD: U256 = U256::new(1000000000000000000000000000000000000000000000000000000);
pub const TEN_DUOD: U256 = U256::new(10000000000000000000000000000000000000000000000000000000);
pub const HUN_DUOD: U256 = U256::new(100000000000000000000000000000000000000000000000000000000);
pub const TRE: U256 = U256::new(1000000000000000000000000000000000000000000000000000000000);
pub const TEN_TRE: U256 = U256::new(10000000000000000000000000000000000000000000000000000000000);
pub const HUN_TRE: U256 = U256::new(100000000000000000000000000000000000000000000000000000000000);
pub const QUAT: U256 = U256::new(1000000000000000000000000000000000000000000000000000000000000);
pub const TEN_QUAT: U256 = U256::new(10000000000000000000000000000000000000000000000000000000000000);
pub const HUN_QUAT: U256 = U256::new(100000000000000000000000000000000000000000000000000000000000000);
pub const QUIND: U256 = U256::new(1000000000000000000000000000000000000000000000000000000000000000);
pub const TEN_QUIND: U256 = U256::new(10000000000000000000000000000000000000000000000000000000000000000);
pub const HUN_QUIND: U256 = U256::new(100000000000000000000000000000000000000000000000000000000000000000);
pub const SEXD: U256 = U256::new(1000000000000000000000000000000000000000000000000000000000000000000);
pub const TEN_SEXD: U256 = U256::new(10000000000000000000000000000000000000000000000000000000000000000000);
pub const HUN_SEXD: U256 = U256::new(100000000000000000000000000000000000000000000000000000000000000000000);
pub const SEPTEN: U256 = U256::new(1000000000000000000000000000000000000000000000000000000000000000000000);
pub const TEN_SEPTEN: U256 = U256::new(10000000000000000000000000000000000000000000000000000000000000000000000);
pub const HUN_SEPTEN: U256 = U256::new(100000000000000000000000000000000000000000000000000000000000000000000000);
pub const OCTOD: U256 = U256::new(1000000000000000000000000000000000000000000000000000000000000000000000000);
pub const TEN_OCTOD: U256 = U256::new(10000000000000000000000000000000000000000000000000000000000000000000000000);
pub const HUN_OCTOD: U256 = U256::new(100000000000000000000000000000000000000000000000000000000000000000000000000);
pub const NOVEM: U256 = U256::new(1000000000000000000000000000000000000000000000000000000000000000000000000000);
pub const TEN_NOVEM: U256 = U256::new(10000000000000000000000000000000000000000000000000000000000000000000000000000);
pub const HUN_NOVEM: U256 = U256::new(100000000000000000000000000000000000000000000000000000000000000000000000000000);
