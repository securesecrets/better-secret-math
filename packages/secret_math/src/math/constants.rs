U256::new(10u128) =>  result = mul(SCALE, sub(1.into(), 18.into())),
U256::new(100u128) =>  result = mul(SCALE, sub(2, 18.into())),
U256::new(1000) =>  result = mul(SCALE, sub(3, 18.into())),
U256::new(10000) =>  result = mul(SCALE, sub(4, 18.into())),
U256::new(100000) =>  result = mul(SCALE, sub(5, 18.into())),
U256::new(1000000) =>  result = mul(SCALE, sub(6, 18.into())),
U256::new(10000000) =>  result = mul(SCALE, sub(7, 18.into())),
U256::new(100000000) =>  result = mul(SCALE, sub(8, 18.into())),
U256::new(1000000000) =>  result = mul(SCALE, sub(9, 18.into())),
U256::new(10000000000) =>  result = mul(SCALE, sub(10, 18.into())),
U256::new(100000000000) =>  result = mul(SCALE, sub(11, 18.into())),
U256::new(1000000000000) =>  result = mul(SCALE, sub(12, 18.into())),
U256::new(10000000000000) =>  result = mul(SCALE, sub(13, 18.into())),
U256::new(100000000000000) =>  result = mul(SCALE, sub(14, 18.into())),
U256::new(1000000000000000) =>  result = mul(SCALE, sub(15, 18.into())),
U256::new(10000000000000000) =>  result = mul(SCALE, sub(16, 18.into())),
U256::new(100000000000000000) =>  result = mul(SCALE, sub(17, 18.into())),
U256::new(1000000000000000000) =>  result = 0,
U256::new(10000000000000000000) =>  result = SCALE,
U256::new(100000000000000000000) =>  result = mul(SCALE, 2),
U256::new(1000000000000000000000) =>  result = mul(SCALE, 3),
U256::new(10000000000000000000000) =>  result = mul(SCALE, 4),
U256::new(100000000000000000000000) =>  result = mul(SCALE, 5),
U256::new(1000000000000000000000000) =>  result = mul(SCALE, 6),
U256::new(10000000000000000000000000) =>  result = mul(SCALE, 7),
U256::new(100000000000000000000000000) =>  result = mul(SCALE, 8),
U256::new(1000000000000000000000000000) =>  result = mul(SCALE, 9),
U256::new(10000000000000000000000000000) =>  result = mul(SCALE, 10),
U256::new(100000000000000000000000000000) =>  result = mul(SCALE, 11),
U256::new(1000000000000000000000000000000) =>  result = mul(SCALE, 12),
U256::new(10000000000000000000000000000000) =>  result = mul(SCALE, 13),
U256::new(100000000000000000000000000000000) =>  result = mul(SCALE, 14),
U256::new(1000000000000000000000000000000000) =>  result = mul(SCALE, 15),
U256::new(10000000000000000000000000000000000) =>  result = mul(SCALE, 16),
U256::new(100000000000000000000000000000000000) =>  result = mul(SCALE, 17),
U256::new(1000000000000000000000000000000000000) =>  result = mul(SCALE, 18),
U256::new(10000000000000000000000000000000000000) =>  result = mul(SCALE, 19),
U256::new(100000000000000000000000000000000000000) =>  result = mul(SCALE, 20),
U256::new(1000000000000000000000000000000000000000) =>  result = mul(SCALE, 21),
U256::new(10000000000000000000000000000000000000000) =>  result = mul(SCALE, 22),
U256::new(100000000000000000000000000000000000000000) =>  result = mul(SCALE, 23),
U256::new(1000000000000000000000000000000000000000000) =>  result = mul(SCALE, 24),
U256::new(10000000000000000000000000000000000000000000) =>  result = mul(SCALE, 25),
U256::new(100000000000000000000000000000000000000000000) =>  result = mul(SCALE, 26),
U256::new(1000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 27),
U256::new(10000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 28),
U256::new(100000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 29),
U256::new(1000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 30),
U256::new(10000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 31),
U256::new(100000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 32),
U256::new(1000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 33),
U256::new(10000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 34),
U256::new(100000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 35),
U256::new(1000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 36),
U256::new(10000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 37),
U256::new(100000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 38),
U256::new(1000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 39),
U256::new(10000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 40),
U256::new(100000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 41),
U256::new(1000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 42),
U256::new(10000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 43),
U256::new(100000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 44),
U256::new(1000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 45),
U256::new(10000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 46),
U256::new(100000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 47),
U256::new(1000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 48),
U256::new(10000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 49),
U256::new(100000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 50),
U256::new(1000000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 51),
U256::new(10000000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 52),
U256::new(100000000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 53),
U256::new(1000000000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 54),
U256::new(10000000000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 55),
U256::new(100000000000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 56),
U256::new(1000000000000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 57),
U256::new(10000000000000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 58),
U256::new(100000000000000000000000000000000000000000000000000000000000000000000000000000) =>  result = mul(SCALE, 59),
